.TH openTIDAL_SessionInit 3 "04 Jan 2021" "libopenTIDAL 0.0.1" "libopenTIDAL Manual"
.SH NAME
openTIDAL_SessionInit \- Start a libopenTIDAL session
.SH SYNOPSIS
.B #include <openTIDAL/openTIDAL.h>

.BI "const int openTIDAL_SessionInit (openTIDAL_SessionContainer *session, const char *file_location);"
.SH DESCRIPTION
Before calling a \fBlibopenTIDAL\fP(3) service function, this function must be the
first function to call. This call \fBmust\fP have a corresponding call to
\fIopenTIDAL_SessionCleanup(3)\fP when the operation is complete.

Specify the location of the \fBlibopenTIDAL\fP(3) persistent session configuration
file. The file location path has to be specified even if the config itself
does not exist. A config will be created at this location when
\fIopenTIDAL_SessionCreateFile(3)\fP is called. The persistent session
config stores the oAuth2.0 refresh- and access-token, the user-id and other
important configuration values. It should be stored in a secure location.
Read and write permissions are needed.

If the pointer to the persistent config path is NULL, restricted client
authorisation is enabled. With this mode enabled, a service request will
use the client id to authenticate with the TIDAL API. User-based and stream
service requests are disabled and will return an authorisation error.
30s previews of a track (64kbps 22.05kHz MP3) or a video (640x360 1116kbps MP4)
are available. The restricted client authorisation mode is primarily useful for
metadata service requests.
.SH RETURN VALUE
If successful openTIDAL_SessionInit returns a 1.
This is only the case if the file_location parameter is specified.

If the initialisation failed or the file_location parameter is NULL
\fIopenTIDAL_SessionInit(3)\fP returns a 0.
If the file_location parameter was specified prior but the initialisation
failed a reading/memory allocation error occurred.
.SH EXAMPLE
.nf
openTIDAL_SessionContainer session;
int status;

status = openTIDAL_SessionInit (&session, "/tmp/config");
.fi
