.TH openTIDAL_GetAlbum 3 "04 Jan 2021" "libopenTIDAL 0.0.1" "libopenTIDAL Manual"
.SH NAME
openTIDAL_GetAlbum, openTIDAL_GetAlbumItems \- Request album metadata
.SH SYNOPSIS
.B #include <openTIDAL/openTIDAL.h>

.BI "openTIDAL_ContentContainer *openTIDAL_GetAlbum (openTIDAL_SessionContainer *session, const char *albumid);"

.BI "openTIDAL_ContentContainer *openTIDAL_GetAlbumItems (openTIDAL_SessionContainer *session, const char *albumid, const int limit, const int offset);"
.SH DESCRIPTION
The openTIDAL_GetAlbum family of service functions requests album metadata from the TIDAL API. These service calls
\fBmust\fP have a corresponding call to \fIopenTIDAL_StructDelete(3)\fP when the operation is complete.

The \fBopenTIDAL_GetAlbum\fP() function (GET /v1/albums/{id}) requests album metadata.

The \fBopenTIDAL_GetAlbumItems\fP() function (GET /v1/albums/{id}/items) requests album content (tracks and videos).
This service function supports pagination and limitation. Keep in mind that the TIDAL API has restricted limits.
The "totalNumberOfItems" integer specifies the number of items that the album contains, regardless of the limit/offset.
Use this value in combination with the total number of items inside the items pool (\fIopenTIDAL_ContentContainer(7)\fP)
to determine if a subsequent offset request is needed.
.SH STRUCTURE
\fIopenTIDAL_AlbumContainer(7)\fP

\fIopenTIDAL_ItemsContainer(7)\fP
.SH RETURN VALUE
If no memory allocation error occurred in allocating the \fIopenTIDAL_ContentContainer(7)\fP, a
pointer to a \fIopenTIDAL_ContentContainer(7)\fP will be returned.
With this function the album/items structure inside the \fIopenTIDAL_ContentContainer(7)\fP is allocated and
populated.
Otherwise it returns a NULL pointer.
(See \fIopenTIDAL_StatusCodes(7)\fP and \fIopenTIDAL_ContentContainer(7)\fP).
.SH EXAMPLE
\fIopenTIDAL_ServiceRequestExample(7)\fP
