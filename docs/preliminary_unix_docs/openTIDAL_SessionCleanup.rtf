{\rtf1\ansi\ansicpg1252\cocoartf2576
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 NAME\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 	openTIDAL_SessionCleanup - End a openTIDAL session\
\
SYNOPSIS\
	#include <openTIDAL/openTIDAL.h>\
	\
	void openTIDAL_SessionCleanup (openTIDAL_SessionContainer *session);\
\
DESCRIPTION\
	This function must be the last function to call for a openTIDAL session. It deallocated the memory 	allocation performed by the openTIDAL_SessionInit function. It is the opposite of the 	init function and must be called with the same session as input that a openTIDAL_SessionInit call 	allocated.\
\
	Don\'92t call this function if you intend to call more openTIDAL service functions.\
\
	Any use of the session or the openTIDAL service functions without reinitialising is illegal. 	openTIDAL_SessionCleanup deallocates all memory associated with the session and kills the curl\
	handle.\
\
RETURN VALUE\
	None\
\
EXAMPLE\
	openTIDAL_SessionContainer session;\
	int status;\
	\
	status = openTIDAL_SessionInit (&session, \'93/tmp/config\'94);\
	openTIDAL_SessionCleanup (&session);}